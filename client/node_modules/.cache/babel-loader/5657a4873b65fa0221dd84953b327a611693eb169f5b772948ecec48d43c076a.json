{"ast":null,"code":"import * as cookie from 'cookie';\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\nexport default class Cookies {\n  constructor(cookies, defaultSetOptions = {}) {\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      const previousCookies = this.cookies;\n      this.cookies = cookie.parse(document.cookie);\n      this._checkChanges(previousCookies);\n    };\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n  _checkChanges(newCookies) {\n    const names = new Set(Object.keys(newCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (newCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(newCookies[name])\n        });\n      }\n    });\n  }\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n  get(name, options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    return readCookie(this.cookies[name], options);\n  }\n  getAll(options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    const result = {};\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n    return result;\n  }\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, stringValue, options);\n    }\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign({}, options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = cookie.serialize(name, '', finalOptions);\n    }\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n    if (this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n    if (this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n}","map":{"version":3,"names":["cookie","hasDocumentCookie","parseCookies","readCookie","Cookies","constructor","cookies","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","parse","document","_checkChanges","domCookies","_emitChange","params","i","length","newCookies","names","Set","Object","keys","concat","forEach","name","value","_startPolling","pollingInterval","setInterval","_stopPolling","clearInterval","get","options","doNotUpdate","getAll","result","set","assign","stringValue","JSON","stringify","serialize","remove","finalOptions","expires","Date","maxAge","undefined","addChangeListener","callback","push","window","cookieStore","addEventListener","removeChangeListener","idx","indexOf","splice","removeEventListener"],"sources":["C:/Users/khali/OneDrive/Desktop/Projects/recipe_app/client/node_modules/universal-cookie/es6/Cookies.js"],"sourcesContent":["import * as cookie from 'cookie';\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\nexport default class Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = cookie.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(newCookies) {\n        const names = new Set(Object.keys(newCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (newCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(newCookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAChC,SAASC,iBAAiB,EAAEC,YAAY,EAAEC,UAAU,QAAQ,SAAS;AACrE,eAAe,MAAMC,OAAO,CAAC;EACzBC,WAAWA,CAACC,OAAO,EAAEC,iBAAiB,GAAG,CAAC,CAAC,EAAE;IACzC,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,MAAM,GAAG,MAAM;MAChB,IAAI,CAAC,IAAI,CAACD,mBAAmB,EAAE;QAC3B;MACJ;MACA,MAAME,eAAe,GAAG,IAAI,CAACL,OAAO;MACpC,IAAI,CAACA,OAAO,GAAGN,MAAM,CAACY,KAAK,CAACC,QAAQ,CAACb,MAAM,CAAC;MAC5C,IAAI,CAACc,aAAa,CAACH,eAAe,CAAC;IACvC,CAAC;IACD,MAAMI,UAAU,GAAG,OAAOF,QAAQ,KAAK,WAAW,GAAG,EAAE,GAAGA,QAAQ,CAACb,MAAM;IACzE,IAAI,CAACM,OAAO,GAAGJ,YAAY,CAACI,OAAO,IAAIS,UAAU,CAAC;IAClD,IAAI,CAACR,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACE,mBAAmB,GAAGR,iBAAiB,CAAC,CAAC;EAClD;EACAe,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACV,eAAe,CAACW,MAAM,EAAE,EAAED,CAAC,EAAE;MAClD,IAAI,CAACV,eAAe,CAACU,CAAC,CAAC,CAACD,MAAM,CAAC;IACnC;EACJ;EACAH,aAAaA,CAACM,UAAU,EAAE;IACtB,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,CAACK,MAAM,CAACF,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,OAAO,CAAC,CAAC,CAAC;IAChFe,KAAK,CAACK,OAAO,CAAEC,IAAI,IAAK;MACpB,IAAIP,UAAU,CAACO,IAAI,CAAC,KAAK,IAAI,CAACrB,OAAO,CAACqB,IAAI,CAAC,EAAE;QACzC,IAAI,CAACX,WAAW,CAAC;UACbW,IAAI;UACJC,KAAK,EAAEzB,UAAU,CAACiB,UAAU,CAACO,IAAI,CAAC;QACtC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACAE,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACC,eAAe,GAAGC,WAAW,CAAC,IAAI,CAACrB,MAAM,EAAE,GAAG,CAAC;EACxD;EACAsB,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACF,eAAe,EAAE;MACtBG,aAAa,CAAC,IAAI,CAACH,eAAe,CAAC;IACvC;EACJ;EACAI,GAAGA,CAACP,IAAI,EAAEQ,OAAO,GAAG,CAAC,CAAC,EAAE;IACpB,IAAI,CAACA,OAAO,CAACC,WAAW,EAAE;MACtB,IAAI,CAAC1B,MAAM,CAAC,CAAC;IACjB;IACA,OAAOP,UAAU,CAAC,IAAI,CAACG,OAAO,CAACqB,IAAI,CAAC,EAAEQ,OAAO,CAAC;EAClD;EACAE,MAAMA,CAACF,OAAO,GAAG,CAAC,CAAC,EAAE;IACjB,IAAI,CAACA,OAAO,CAACC,WAAW,EAAE;MACtB,IAAI,CAAC1B,MAAM,CAAC,CAAC;IACjB;IACA,MAAM4B,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,IAAIX,IAAI,IAAI,IAAI,CAACrB,OAAO,EAAE;MAC3BgC,MAAM,CAACX,IAAI,CAAC,GAAGxB,UAAU,CAAC,IAAI,CAACG,OAAO,CAACqB,IAAI,CAAC,EAAEQ,OAAO,CAAC;IAC1D;IACA,OAAOG,MAAM;EACjB;EACAC,GAAGA,CAACZ,IAAI,EAAEC,KAAK,EAAEO,OAAO,EAAE;IACtB,IAAIA,OAAO,EAAE;MACTA,OAAO,GAAGZ,MAAM,CAACiB,MAAM,CAACjB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACjC,iBAAiB,CAAC,EAAE4B,OAAO,CAAC;IAC/E,CAAC,MACI;MACDA,OAAO,GAAG,IAAI,CAAC5B,iBAAiB;IACpC;IACA,MAAMkC,WAAW,GAAG,OAAOb,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGc,IAAI,CAACC,SAAS,CAACf,KAAK,CAAC;IAC7E,IAAI,CAACtB,OAAO,GAAGiB,MAAM,CAACiB,MAAM,CAACjB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClC,OAAO,CAAC,EAAE;MAAE,CAACqB,IAAI,GAAGc;IAAY,CAAC,CAAC;IACtF,IAAI,IAAI,CAAChC,mBAAmB,EAAE;MAC1BI,QAAQ,CAACb,MAAM,GAAGA,MAAM,CAAC4C,SAAS,CAACjB,IAAI,EAAEc,WAAW,EAAEN,OAAO,CAAC;IAClE;IACA,IAAI,CAACnB,WAAW,CAAC;MAAEW,IAAI;MAAEC,KAAK;MAAEO;IAAQ,CAAC,CAAC;EAC9C;EACAU,MAAMA,CAAClB,IAAI,EAAEQ,OAAO,EAAE;IAClB,MAAMW,YAAY,GAAIX,OAAO,GAAGZ,MAAM,CAACiB,MAAM,CAACjB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEL,OAAO,CAAC,EAAE;MAAEY,OAAO,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAE;IACjI,IAAI,CAAC3C,OAAO,GAAGiB,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClC,OAAO,CAAC;IAC9C,OAAO,IAAI,CAACA,OAAO,CAACqB,IAAI,CAAC;IACzB,IAAI,IAAI,CAAClB,mBAAmB,EAAE;MAC1BI,QAAQ,CAACb,MAAM,GAAGA,MAAM,CAAC4C,SAAS,CAACjB,IAAI,EAAE,EAAE,EAAEmB,YAAY,CAAC;IAC9D;IACA,IAAI,CAAC9B,WAAW,CAAC;MAAEW,IAAI;MAAEC,KAAK,EAAEsB,SAAS;MAAEf;IAAQ,CAAC,CAAC;EACzD;EACAgB,iBAAiBA,CAACC,QAAQ,EAAE;IACxB,IAAI,CAAC5C,eAAe,CAAC6C,IAAI,CAACD,QAAQ,CAAC;IACnC,IAAI,IAAI,CAAC5C,eAAe,CAACW,MAAM,KAAK,CAAC,EAAE;MACnC,IAAI,OAAOmC,MAAM,KAAK,QAAQ,IAAI,aAAa,IAAIA,MAAM,EAAE;QACvDA,MAAM,CAACC,WAAW,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC9C,MAAM,CAAC;MAC9D,CAAC,MACI;QACD,IAAI,CAACmB,aAAa,CAAC,CAAC;MACxB;IACJ;EACJ;EACA4B,oBAAoBA,CAACL,QAAQ,EAAE;IAC3B,MAAMM,GAAG,GAAG,IAAI,CAAClD,eAAe,CAACmD,OAAO,CAACP,QAAQ,CAAC;IAClD,IAAIM,GAAG,IAAI,CAAC,EAAE;MACV,IAAI,CAAClD,eAAe,CAACoD,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACvC;IACA,IAAI,IAAI,CAAClD,eAAe,CAACW,MAAM,KAAK,CAAC,EAAE;MACnC,IAAI,OAAOmC,MAAM,KAAK,QAAQ,IAAI,aAAa,IAAIA,MAAM,EAAE;QACvDA,MAAM,CAACC,WAAW,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACnD,MAAM,CAAC;MACjE,CAAC,MACI;QACD,IAAI,CAACsB,YAAY,CAAC,CAAC;MACvB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}